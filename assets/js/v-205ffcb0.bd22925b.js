(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[285],{7861:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>l});const l={key:"v-205ffcb0",path:"/source/basis/npm%E5%AE%89%E8%A3%85%E6%9C%BA%E5%88%B6%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%8D%E5%8E%9F%E7%90%86.html",title:"npm 安装机制及企业级部署私服原理",lang:"en-US",frontmatter:{title:"npm 安装机制及企业级部署私服原理"},excerpt:"",headers:[{level:2,title:"1. npm 内部机制和核心原理",slug:"_1-npm-内部机制和核心原理",children:[]},{level:2,title:"2. npm 的安装机制和背后思想",slug:"_2-npm-的安装机制和背后思想",children:[]},{level:2,title:"3. npm 缓存机制",slug:"_3-npm-缓存机制",children:[]},{level:2,title:"4. npm 不完全指南",slug:"_4-npm-不完全指南",children:[{level:3,title:"4.1 自定义 npm init",slug:"_4-1-自定义-npm-init",children:[]},{level:3,title:"4.2 利用 npm link，高效率在本地调试以验证包的可用性",slug:"_4-2-利用-npm-link-高效率在本地调试以验证包的可用性",children:[]},{level:3,title:"4.3 npx 的作用",slug:"_4-3-npx-的作用",children:[]},{level:3,title:"4.4 npm 多源镜像和企业级部署私服原理",slug:"_4-4-npm-多源镜像和企业级部署私服原理",children:[]},{level:3,title:"4.5 npm 配置作用优先级",slug:"_4-5-npm-配置作用优先级",children:[]},{level:3,title:"4.6 npm 镜像和安装问题",slug:"_4-6-npm-镜像和安装问题",children:[]}]},{level:2,title:"5. 结语",slug:"_5-结语",children:[]}],filePathRelative:"source/basis/npm安装机制及企业级部署私服原理.md",git:{updatedTime:1625219128e3,contributors:[]}}},4065:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>na});var l=a(6252);const m=a.p+"assets/img/Cip5yF_axkqAclTFAAJmlxGYSmI551.efb63b6a.png",e=a.p+"assets/img/CgqCHl_TbUSAZ8CsAAF3O01IL9Q887.4b4f0513.png",p=a.p+"assets/img/CgqCHl_Tba6AcJj0AAGPl9HW2qg745.ad7ef97f.png",t=a.p+"assets/img/CgqCHl_TbZCAanocAADUyWa5fV4429.1acc4e41.png",c=a.p+"assets/img/CgpVE1_XAHWAOTwZAAa8HJHvldA513.3baab060.png",o=(0,l.Wm)("p",null,"前端工程化离不开 npm（node package manager） 或者 Yarn 这些管理工具。npm 或 Yarn 在工程项目中，除了负责依赖的安装和维护以外，还能通过 npm scripts 串联起各个职能部分，让独立的环节自动运转起来。",-1),u=(0,l.Wm)("p",null,"无论是 npm 还是 Yarn，它们的体系都非常庞大，在使用过程中你很可能产生如下疑问：",-1),i=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"项目依赖出现问题时，删除大法好，即删除 node_modules 和 lockfiles，再重新 install，这样操作是否存在风险？")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"把所有依赖都安装到 dependencies 中，不区分 devDependencies 会有问题吗？")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"我们的应用依赖了公共库 A 和公共库 B，同时公共库 A 也依赖了公共库 B，那么公共库 B 会被多次安装或重复打包吗？")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"一个项目中，既有人用 npm，也有人用 Yarn，这会引发什么问题？")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"我们是否应该提交 lockfiles 文件到项目仓库呢？")])],-1),r=(0,l.Wm)("p",null,"接下来的 01 ~ 03 讲我们就进一步聊一聊这些问题！",-1),W=(0,l.Wm)("h2",{id:"_1-npm-内部机制和核心原理"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_1-npm-内部机制和核心原理"},"#"),(0,l.Uk)(" 1. npm 内部机制和核心原理")],-1),k=(0,l.Wm)("p",null,"我们先来看看 npm 的核心目标：",-1),g=(0,l.Wm)("div",{class:"custom-container tip"},[(0,l.Wm)("p",{class:"custom-container-title"},"TIP"),(0,l.Wm)("p",null,"Bring the best of open source to you, your team and your company. 给你和你的团队、你的公司带来最好的开源库和依赖。")],-1),d=(0,l.Wm)("p",null,"通过这句话，我们可以知道 npm 最重要的一环是安装和维护依赖。在平时开发中，**“删除 node_modules，重新 npm install”**是一个百试不爽的解决 npm 安装类问题的方法。但是其中的作用原理是什么？这样的操作是否规范呢？",-1),b=(0,l.Wm)("p",null,"这一讲，我们就先从 npm 内部机制出发来剖析此类问题。了解完安装机制和原理，我相信你对于工程中依赖的问题，将有一个更加体系化的认知。",-1),U=(0,l.Wm)("h2",{id:"_2-npm-的安装机制和背后思想"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_2-npm-的安装机制和背后思想"},"#"),(0,l.Uk)(" 2. npm 的安装机制和背后思想")],-1),h=(0,l.Wm)("p",null,"npm 的安装机制非常值得探究。Ruby 的 Gem、Python 的 pip 都是全局安装，但是 npm 的安装机制秉承了不同的设计哲学。",-1),f=(0,l.Wm)("p",null,[(0,l.Uk)("它会优先安装依赖包到当前项目目录，使得不同应用项目的依赖各成体系，同时还减轻了包作者的 API 兼容性压力，"),(0,l.Wm)("strong",null,"但这样做的缺陷也很明显"),(0,l.Uk)("：如果我们的项目 A 和项目 B，都依赖了相同的公共库 C，那么公共库 C 一般都会在项目 A 和项目 B 中，各被安装一次。这就说明，"),(0,l.Wm)("strong",null,"同一个依赖包可能在我们的电脑上进行多次安装"),(0,l.Uk)("。")],-1),_=(0,l.Wm)("p",null,"当然，对于一些工具模块比如 supervisor 和 gulp，你仍然可以使用全局安装模式，这样方便注册 path 环境变量，我们可以在任何地方直接使用 supervisor、 gulp 这些命令。（不过，一般还是建议不同项目维护自己局部的 gulp 开发工具以适配不同项目需求。）",-1),v=(0,l.Wm)("p",null,"下面，言归正传，我们通过流程图来分析 npm install 的安装机制。",-1),x=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:m,alt:"img"})],-1),j=(0,l.Wm)("p",null,[(0,l.Uk)("npm install 执行之后，首先，检查并获取 npm 配置，"),(0,l.Wm)("strong",null,"这里的优先级为：项目级的 .npmrc 文件 > 用户级的 .npmrc 文件> 全局级的 .npmrc 文件 > npm 内置的 .npmrc 文件"),(0,l.Uk)("。")],-1),y=(0,l.Wm)("p",null,"然后检查项目中是否有 package-lock.json 文件。",-1),A=(0,l.Wm)("p",null,"如果有，则检查 package-lock.json 和 package.json 中声明的依赖是否一致：",-1),w=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"一致，直接使用 package-lock.json 中的信息，从缓存或网络资源中加载依赖；")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"不一致，按照 npm 版本进行处理（不同 npm 版本处理会有不同，具体处理方式如图所示）。")])],-1),E=(0,l.Wm)("p",null,"如果没有，则根据 package.json 递归构建依赖树。然后按照构建好的依赖树下载完整的依赖资源，在下载时就会检查是否存在相关资源缓存：",-1),C=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"存在，则将缓存内容解压到 node_modules 中；")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"否则就先从 npm 远程仓库下载包，校验包的完整性，并添加到缓存，同时解压到 node_modules。")])],-1),B=(0,l.Wm)("p",null,"最后生成 package-lock.json。",-1),T=(0,l.Wm)("p",null,"构建依赖树时，当前依赖项目不管其是直接依赖还是子依赖的依赖，都应该按照扁平化原则，优先将其放置在 node_modules 根目录（最新版本 npm 规范）。在这个过程中，遇到相同模块就判断已放置在依赖树中的模块版本是否符合新模块的版本范围，如果符合则跳过；不符合则在当前模块的 node_modules 下放置该模块（最新版本 npm 规范）。",-1),X=(0,l.Wm)("p",null,[(0,l.Uk)("我给出的流程图中有标注更细节的内容，这里就不再赘述了。"),(0,l.Wm)("strong",null,"你要格外注意图中标明的 npm 不同版本的不同处理情况，并学会从这种“历史问题”中总结 npm 使用的团队最佳实践：同一个项目团队，应该保证 npm 版本的一致"),(0,l.Uk)("。")],-1),I=(0,l.Wm)("p",null,"前端工程中，依赖嵌套依赖，一个中型项目中 node_moduels 安装包可能就已经是海量的了。如果安装包每次都通过网络下载获取，无疑会增加安装时间成本。对于这个问题，缓存始终是一个好的解决思路，我们接下来看看 npm 自己的缓存机制。",-1),H=(0,l.Wm)("h2",{id:"_3-npm-缓存机制"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_3-npm-缓存机制"},"#"),(0,l.Uk)(" 3. npm 缓存机制")],-1),q=(0,l.Wm)("p",null,"对于一个依赖包的同一版本进行本地化缓存，是当代依赖包管理工具的一个常见设计。使用时要先执行以下命令：",-1),P=(0,l.Wm)("p",null,"复制代码",-1),S=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config get cache\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br")])],-1),D=(0,l.Wm)("p",null,[(0,l.Uk)("得到配置缓存的根目录在 /Users/cehou/.npm（ Mac OS 中，npm 默认的缓存位置） 当中。我们 cd 进入 /Users/cehou/.npm 中可以发现"),(0,l.Wm)("code",null,"_cacache"),(0,l.Uk)("文件。事实上，在 npm v5 版本之后，缓存数据均放在根目录中的"),(0,l.Wm)("code",null,"_cacache"),(0,l.Uk)("文件夹中。")],-1),F=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:e,alt:"img"})],-1),R=(0,l.Wm)("p",null,"我们可以使用以下命令清除 /Users/cehou/.npm/_cacache 中的文件：",-1),Y=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" cache clean --force\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br")])],-1),L=(0,l.Uk)("你可以点击"),O={href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm/",target:"_blank",rel:"noopener noreferrer"},G=(0,l.Uk)("这里"),J=(0,l.Uk)("看看其中对应的 npm 源码。"),M=(0,l.Wm)("p",null,[(0,l.Uk)("接下来打开"),(0,l.Wm)("code",null,"_cacache"),(0,l.Uk)("文件，看看 npm 缓存了哪些东西，一共有 3 个目录：")],-1),Q=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"content-v2")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"index-v5")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"tmp")])],-1),Z=(0,l.Wm)("p",null,"其中 content-v2 里面基本都是一些二进制文件。为了使这些二进制文件可读，我们把二进制文件的扩展名改为 .tgz，然后进行解压，得到的结果其实就是我们的 npm 包资源。",-1),N=(0,l.Wm)("p",null,"而 index-v5 文件中，我们采用跟刚刚一样的操作就可以获得一些描述性的文件，事实上这些内容就是 content-v2 里文件的索引。",-1),V=(0,l.Wm)("p",null,"这些缓存如何被储存并被利用的呢？",-1),$=(0,l.Uk)("这就和 npm install 机制联系在了一起。当 npm install 执行时，通过"),z={href:"https://www.npmjs.com/package/pacote",target:"_blank",rel:"noopener noreferrer"},K=(0,l.Uk)("pacote"),nn=(0,l.Uk)("把相应的包解压在对应的 node_modules 下面。npm 在下载依赖时，先下载到缓存当中，再解压到项目 node_modules 下。pacote 依赖"),sn={href:"https://github.com/npm/npm-registry-fetch#npm-registry-fetch",target:"_blank",rel:"noopener noreferrer"},an=(0,l.Uk)("npm-registry-fetch"),ln=(0,l.Uk)("来下载包，npm-registry-fetch 可以通过设置 cache 属性，在给定的路径下根据"),mn={href:"https://datatracker.ietf.org/doc/rfc7234/",target:"_blank",rel:"noopener noreferrer"},en=(0,l.Uk)("IETF RFC 7234"),pn=(0,l.Uk)("生成缓存数据。"),tn=(0,l.Uk)("接着，在每次安装资源时，根据 package-lock.json 中存储的 integrity、version、name 信息生成一个唯一的 key，这个 key 能够对应到 index-v5 目录下的缓存记录。如果发现有缓存资源，就会找到 tar 包的 hash，根据 hash 再去找缓存的 tar 包，并再次通过"),cn={href:"https://www.npmjs.com/package/pacote",target:"_blank",rel:"noopener noreferrer"},on=(0,l.Uk)("pacote"),un=(0,l.Uk)("把对应的二进制文件解压到相应的项目 node_modules 下面，省去了网络下载资源的开销。"),rn=(0,l.Wm)("div",{class:"custom-container tip"},[(0,l.Wm)("p",{class:"custom-container-title"},"注意"),(0,l.Wm)("p",null,"这里提到的缓存策略是从 npm v5 版本开始的。在 npm v5 版本之前，每个缓存的模块在 ~/.npm 文件夹中以模块名的形式直接存储，储存结构是：{cache}/{name}/{version}。")],-1),Wn=(0,l.Wm)("p",null,"了解这些相对底层的内容可以直接帮助开发者排查 npm 相关问题，这也是区别一般程序员和架构师的细节之一。能不能在理论内容上多走一步，也决定了我们的技术能力能不能更上一层楼。这里我们进行了初步学习，我希望这也可以成为你探究底层的开始。",-1),kn=(0,l.Wm)("h2",{id:"_4-npm-不完全指南"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-npm-不完全指南"},"#"),(0,l.Uk)(" 4. npm 不完全指南")],-1),gn=(0,l.Uk)("接下来，我想介绍几个实用的 npm 小技巧，这些技巧并不包括“npm 快捷键”等常见内容，主要是从工程开发角度，聚焦更广泛的内容。这里我不会花大量篇幅讲解 npm 命令内容，这些知识你可以直接通过 "),dn={href:"https://docs.npmjs.com/cli/v7",target:"_blank",rel:"noopener noreferrer"},bn=(0,l.Uk)("npm cli "),Un=(0,l.Uk)("官方文档获得。"),hn=(0,l.Wm)("p",null,"下面，我将从 npm 使用技巧以及一些常见使用误区来展开。",-1),fn=(0,l.Wm)("h3",{id:"_4-1-自定义-npm-init"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-1-自定义-npm-init"},"#"),(0,l.Uk)(" 4.1 自定义 npm init")],-1),_n=(0,l.Wm)("p",null,[(0,l.Uk)("npm 支持我们自定义 npm init，快速创建一个符合自己需求的自定义项目。想象一下，"),(0,l.Wm)("strong",null,"npm init 命令本身并不复杂，它其实就是调用 shell 脚本输出一个初始化的 package.json 文件"),(0,l.Uk)("。那么相应地，我们要自定义 npm init 命令，就是写一个 node 脚本而已，它的 module.exports 即为 package.json 配置内容。")],-1),vn=(0,l.Wm)("p",null,"为了实现更加灵活的自定义功能，我们可以使用 prompt() 方法，获取用户输入并动态产生的内容：",-1),xn=(0,l.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-javascript"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token keyword"},"const"),(0,l.Uk)(" desc "),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"prompt"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'请输入项目描述'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'项目描述...'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\nmodule"),(0,l.Wm)("span",{class:"token punctuation"},"."),(0,l.Uk)("exports "),(0,l.Wm)("span",{class:"token operator"},"="),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n  key"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'value'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)("\n  name"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"prompt"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'name?'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)(" process"),(0,l.Wm)("span",{class:"token punctuation"},"."),(0,l.Wm)("span",{class:"token function"},"cwd"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},"."),(0,l.Wm)("span",{class:"token function"},"split"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'/'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},"."),(0,l.Wm)("span",{class:"token function"},"pop"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)("\n  version"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"prompt"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'version?'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'0.0.1'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)("\n  description"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(" desc"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)("\n  main"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"'index.js'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)("\n  repository"),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"prompt"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'github repository url'"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},"''"),(0,l.Wm)("span",{class:"token punctuation"},","),(0,l.Uk)(),(0,l.Wm)("span",{class:"token keyword"},"function"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token parameter"},"url"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"token keyword"},"if"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("url"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'touch README.md'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'git init'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'git add README.md'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'git commit -m \"first commit\"'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token template-string"},[(0,l.Wm)("span",{class:"token template-punctuation string"},"`"),(0,l.Wm)("span",{class:"token string"},"git remote add origin "),(0,l.Wm)("span",{class:"token interpolation"},[(0,l.Wm)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,l.Uk)("url"),(0,l.Wm)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,l.Wm)("span",{class:"token template-punctuation string"},"`")]),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n      "),(0,l.Wm)("span",{class:"token function"},"run"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'git push -u origin master'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"token keyword"},"return"),(0,l.Uk)(" url"),(0,l.Wm)("span",{class:"token punctuation"},";"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Uk)("\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"3"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"4"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"5"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"6"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"7"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"8"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"9"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"10"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"11"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"12"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"13"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"14"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"15"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"16"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"17"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"18"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"19"),(0,l.Wm)("br")])],-1),jn=(0,l.Wm)("p",null,"假设该脚本名为 .npm-init.js，我们执行下述命令来确保 npm init 所对应的脚本指向正确的文件：",-1),yn=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config "),(0,l.Wm)("span",{class:"token builtin class-name"},"set"),(0,l.Uk)(" init-module ~"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(".npm-init.js\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br")])],-1),An={class:"custom-container tip"},wn=(0,l.Wm)("p",{class:"custom-container-title"},"TIP",-1),En=(0,l.Uk)("更多信息可见："),Cn={href:"https://docs.npmjs.com/cli/v7/commands/npm-init",target:"_blank",rel:"noopener noreferrer"},Bn=(0,l.Uk)("npm-init"),Tn=(0,l.Uk)("。"),Xn=(0,l.Wm)("p",null,"我们也可以通过配置 npm init 默认字段来自定义 npm init 的内容：",-1),In=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config "),(0,l.Wm)("span",{class:"token builtin class-name"},"set"),(0,l.Uk)(" init.author.name "),(0,l.Wm)("span",{class:"token string"},'"Lucas"'),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config "),(0,l.Wm)("span",{class:"token builtin class-name"},"set"),(0,l.Uk)(" init.author.email "),(0,l.Wm)("span",{class:"token string"},'"lucasXXXXXX@gmail.com"'),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config "),(0,l.Wm)("span",{class:"token builtin class-name"},"set"),(0,l.Uk)(" init.author.url "),(0,l.Wm)("span",{class:"token string"},'"lucasXXXXX.com"'),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(" config "),(0,l.Wm)("span",{class:"token builtin class-name"},"set"),(0,l.Uk)(" init.license "),(0,l.Wm)("span",{class:"token string"},'"MIT"'),(0,l.Uk)("\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"3"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"4"),(0,l.Wm)("br")])],-1),Hn={class:"custom-container tip"},qn=(0,l.Wm)("p",{class:"custom-container-title"},"TIP",-1),Pn=(0,l.Uk)("更多信息见："),Sn={href:"https://docs.npmjs.com/cli/v7/commands/npm-config/",target:"_blank",rel:"noopener noreferrer"},Dn=(0,l.Uk)("npm-config"),Fn=(0,l.Uk)("。"),Rn=(0,l.Wm)("h3",{id:"_4-2-利用-npm-link-高效率在本地调试以验证包的可用性"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-2-利用-npm-link-高效率在本地调试以验证包的可用性"},"#"),(0,l.Uk)(" 4.2 利用 npm link，高效率在本地调试以验证包的可用性")],-1),Yn=(0,l.Wm)("p",null,"当我们开发一个公共包时，总会有这样的困扰：假如我开发一个组件库，某个组件开发完成之后，如何验证该组件能在我的业务项目中正常运行呢？",-1),Ln=(0,l.Wm)("p",null,[(0,l.Uk)("除了写一个完备的测试以外，常见的思路就是"),(0,l.Wm)("strong",null,"在组件库开发中，设计 examples 目录或者一个 playground，启动一个开发服务，以验证组件的运行情况。")],-1),On=(0,l.Wm)("p",null,"然而真实应用场景是多种多样的，如果能在某个项目中率先尝试就太好了。但我们又不能发布一个不安全的包版本供业务项目使用。另一个“笨”方法是，手动复制粘贴组件并打包产出到业务项目的 node_modules 中进行验证，但是这种做法既不安全也会使得项目混乱，变得难以维护，同时过于依赖手工执行，这种操作非常原始。",-1),Gn=(0,l.Wm)("p",null,[(0,l.Uk)("那么如何"),(0,l.Wm)("strong",null,"高效率在本地调试以验证包的可用性"),(0,l.Uk)("呢？这个时候，我们就可以"),(0,l.Wm)("strong",null,"使用 npm link"),(0,l.Uk)("。简单来说，它可以"),(0,l.Wm)("strong",null,"将模块链接到对应的业务项目中运行"),(0,l.Uk)("。")],-1),Jn=(0,l.Wm)("p",null,"我们来看一个具体场景，假设你正在开发项目 project 1，其中有个包 package 1，对应 npm 模块包名称是 npm-package-1，我们在 package 1 项目中加入了新功能 feature A，现在要验证在 project 1 项目中能否正常使用 package 1 的 feature A，你应该怎么做？",-1),Mn=(0,l.Wm)("p",null,"我们先在 package 1 目录中，执行 npm link，这样 npm link 通过链接目录和可执行文件，实现 npm 包命令的全局可执行。",-1),Qn=(0,l.Wm)("p",null,"然后在 project 1 中创建链接，执行 npm link npm-package-1 命令时，它就会去 /usr/local/lib/node_modules/ 这个路径下寻找是否有这个包，如果有就建立软链接。",-1),Zn=(0,l.Wm)("p",null,"这样一来，我们就可以在 project 1 的 node_module 中会看到链接过来的模块包 npm-package-1，此时的 npm-package-1 就带有最新开发的 feature A，这样一来就可以在 project 1 中正常开发调试 npm-package-1。当然别忘了，调试结束后可以执行 npm unlink 以取消关联。",-1),Nn=(0,l.Wm)("p",null,"从工作原理上总结，npm link 的本质就是软链接，它主要做了两件事：",-1),Vn=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"为目标 npm 模块（npm-package-1）创建软链接，将其链接到全局 node 模块安装路径 /usr/local/lib/node_modules/ 中；")]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,"为目标 npm 模块（npm-package-1）的可执行 bin 文件创建软链接，将其链接到全局 node 命令安装路径 /usr/local/bin/ 中。")])],-1),$n=(0,l.Wm)("p",null,[(0,l.Uk)("通过刚才的场景，你可以看到："),(0,l.Wm)("strong",null,"npm link 能够在工程上解决依赖包在任何一个真实项目中进行调试的问题，并且操作起来更加方便快捷。")],-1),zn=(0,l.Wm)("h3",{id:"_4-3-npx-的作用"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-3-npx-的作用"},"#"),(0,l.Uk)(" 4.3 npx 的作用")],-1),Kn=(0,l.Wm)("p",null,"npx 由 npm v5.2 版本引入，解决了 npm 的一些使用快速开发、调试，以及项目内使用全局模块的痛点。",-1),ns=(0,l.Wm)("strong",null,"在传统 npm 模式下",-1),ss=(0,l.Uk)("，如果我们需要使用代码检测工具 "),as={href:"https://eslint.bootcss.com/",target:"_blank",rel:"noopener noreferrer"},ls=(0,l.Uk)("ESLint"),ms=(0,l.Uk)("，就要先通过 npm install 安装："),es=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token function"},"npm"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token function"},"install"),(0,l.Uk)(" eslint --save-dev\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br")])],-1),ps=(0,l.Wm)("p",null,"然后在项目根目录下执行：",-1),ts=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,"./node_modules/.bin/eslint --init\n./node_modules/.bin/eslint yourfile.js\n")]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br")])],-1),cs=(0,l.Wm)("p",null,"或者通过项目脚本和 package.json 的 npm scripts 字段调用 ESLint。",-1),os=(0,l.Wm)("p",null,"而使用 npx 就简单多了，你只需要下面 2 个操作步骤：",-1),us=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,"npx eslint --init\nnpx eslint yourfile.js\n")]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br")])],-1),is=(0,l.Wm)("p",null,"为什么 npx 操作起来如此便捷呢？",-1),rs=(0,l.Wm)("p",null,"这是因为它可以直接执行 node_modules/.bin 文件夹下的文件。在运行命令时，npx 可以自动去 node_modules/.bin 路径和环境变量 $PATH 里面检查命令是否存在，而不需要再在 package.json 中定义相关的 script。",-1),Ws=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"npx 另一个更实用的好处是：npx 执行模块时会优先安装依赖，但是在安装执行后便删除此依赖，这就避免了全局安装模块带来的问题。")],-1),ks=(0,l.Wm)("p",null,"运行如下命令后，npx 会将 create-react-app 下载到一个临时目录，使用以后再删除：",-1),gs=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,"npx create-react-app cra-project\n")]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br")])],-1),ds=(0,l.Uk)("更多关于 npx 的介绍你可以去"),bs={href:"https://www.npmjs.com/package/npx",target:"_blank",rel:"noopener noreferrer"},Us=(0,l.Uk)("官网"),hs=(0,l.Uk)("进一步查看。"),fs=(0,l.Wm)("p",null,"现在，你已经对 npm 有了一个初步了解，我们接下来一同看看 npm 实操部分：多源镜像和企业级部署私服原理。",-1),_s=(0,l.Wm)("h3",{id:"_4-4-npm-多源镜像和企业级部署私服原理"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-4-npm-多源镜像和企业级部署私服原理"},"#"),(0,l.Uk)(" 4.4 npm 多源镜像和企业级部署私服原理")],-1),vs=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"npm 中的源（registry），其实就是一个查询服务"),(0,l.Uk)("。以 npmjs.org 为例，它的查询服务网址是 https://registry.npmjs.org/。这个网址后面跟上模块名，就会得到一个 JSON 对象，里面是该模块所有版本的信息。比如，访问 https://registry.npmjs.org/react，就会看到 react 模块所有版本的信息。")],-1),xs=(0,l.Wm)("p",null,[(0,l.Uk)("我们可以通过"),(0,l.Wm)("code",null,"npm config set"),(0,l.Uk)("命令来设置安装源或者某个 scope 对应的安装源，很多企业也会搭建自己的 npm 源。我们常常会碰到需要使用多个安装源的项目，这时就可以通过 npm-preinstall 的钩子，通过 npm 脚本，在安装公共依赖前自动进行源切换：")],-1),js=(0,l.Wm)("div",{class:"language-json ext-json line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-json"},[(0,l.Wm)("code",null,[(0,l.Wm)("span",{class:"token property"},'"scripts"'),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"token property"},'"preinstall"'),(0,l.Wm)("span",{class:"token operator"},":"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token string"},'"node ./bin/preinstall.js"'),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Uk)("\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"3"),(0,l.Wm)("br")])],-1),ys=(0,l.Wm)("p",null,"其中 preinstall.js 脚本内容，具体逻辑为通过 node.js 执行npm config set命令，代码如下：",-1),As=(0,l.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,l.Wm)("pre",{class:"language-bash"},[(0,l.Wm)("code",null,[(0,l.Uk)("require"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"' child_process'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(".exec"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'npm config get registry'"),(0,l.Uk)(", function"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("error, stdout, stderr"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"token keyword"},"if"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token operator"},"!"),(0,l.Uk)("stdout.toString"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)(".match"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Uk)("/registry"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(".x"),(0,l.Wm)("span",{class:"token punctuation"},"\\"),(0,l.Uk)(".com/"),(0,l.Wm)("span",{class:"token punctuation"},"))"),(0,l.Uk)(),(0,l.Wm)("span",{class:"token punctuation"},"{"),(0,l.Uk)("\n    exec"),(0,l.Wm)("span",{class:"token punctuation"},"("),(0,l.Wm)("span",{class:"token string"},"'npm config set @xscope:registry https://xxx.com/npm/'"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"token punctuation"},"}"),(0,l.Wm)("span",{class:"token punctuation"},")"),(0,l.Uk)("\n")])]),(0,l.Wm)("div",{class:"line-numbers"},[(0,l.Wm)("span",{class:"line-number"},"1"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"2"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"3"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"4"),(0,l.Wm)("br"),(0,l.Wm)("span",{class:"line-number"},"5"),(0,l.Wm)("br")])],-1),ws=(0,l.Uk)("国内很多开发者使用的 "),Es={href:"https://www.npmjs.com/package/nrm",target:"_blank",rel:"noopener noreferrer"},Cs=(0,l.Uk)("nrm"),Bs=(0,l.Uk)("（npm registry manager）是 npm 的镜像源管理工具，使用它可以快速地在 npm 源间切换，这当然也是一种选择。"),Ts=(0,l.Wm)("p",null,"你的公司是否也正在部署一个私有 npm 镜像呢？你有没有想过公司为什么要这样做呢？",-1),Xs=(0,l.Wm)("p",null,[(0,l.Uk)("虽然 npm 并没有被屏蔽，但是下载第三方依赖包的速度依然较缓慢，这严重影响 CI/CD 流程或本地开发效率。部署镜像后，一般可以"),(0,l.Wm)("strong",null,"确保高速、稳定的 npm 服务，而且使发布私有模块更加安全。除此之外，审核机制也可以保障私服上的 npm 模块质量和安全"),(0,l.Uk)("。")],-1),Is=(0,l.Wm)("p",null,"那么，如何部署一个私有 npm 镜像呢？",-1),Hs=(0,l.Wm)("p",null,"现在社区上主要有 3 种工具来搭建 npm 私服：nexus、verdaccio 以及 cnpm。",-1),qs=(0,l.Wm)("p",null,"它们的工作原理相同，我们可以通过 nexus 的架构示例简单了解一下：",-1),Ps=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:p,alt:"img"})],-1),Ss=(0,l.Wm)("p",null,"nexus 架构示例图",-1),Ds=(0,l.Wm)("p",null,"nexus 工作在 client 和外部 npm 之间，并通过 group repository 合并 npm 仓库以及私有仓库，这样就起到了代理转发的作用。",-1),Fs=(0,l.Wm)("p",null,"了解了 npm 私服的原理，我们就不畏惧任何“雷区”。这部分我也总结了两个社区上常见的问题。",-1),Rs=(0,l.Wm)("h3",{id:"_4-5-npm-配置作用优先级"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-5-npm-配置作用优先级"},"#"),(0,l.Uk)(" 4.5 npm 配置作用优先级")],-1),Ys=(0,l.Wm)("p",null,"npm 可以通过默认配置帮助我们预设好 npm 对项目的影响动作，但是 npm 的配置优先级需要开发者确认了解。",-1),Ls=(0,l.Wm)("p",null,"如下图所示，优先级从左到右依次降低。我们在使用 npm 时需要了解 npm 的设置作用域，排除干扰范围，以免一顿骚操作之后，并没有找到相应的起作用配置。",-1),Os=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:t,alt:"img"})],-1),Gs=(0,l.Wm)("h3",{id:"_4-6-npm-镜像和安装问题"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_4-6-npm-镜像和安装问题"},"#"),(0,l.Uk)(" 4.6 npm 镜像和安装问题")],-1),Js=(0,l.Wm)("p",null,[(0,l.Uk)("另外一个常见的问题就是 npm 镜像和依赖安装，关于 npm 镜像和依赖安装问题，归根到底还是网络环境导致的，建议有条件的情况下还是"),(0,l.Wm)("strong",null,"从网络层面解决问题"),(0,l.Uk)("。")],-1),Ms=(0,l.Uk)("如果没有条件，也不要紧，办法总比困难多，可以通过设置安装源镜像来解决，这就需要紧跟社区方案，刨根究底了。这里推荐一篇文章："),Qs={href:"https://mp.weixin.qq.com/s/2ntKGIkR3Uiy9cQfITg2NQ",target:"_blank",rel:"noopener noreferrer"},Zs=(0,l.Uk)("聊聊 npm 镜像那些险象环生的坑"),Ns=(0,l.Uk)("，文章中有更详细的内容，你可以看看。"),Vs=(0,l.Wm)("h2",{id:"_5-结语"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_5-结语"},"#"),(0,l.Uk)(" 5. 结语")],-1),$s=(0,l.Wm)("p",null,"关于 npm 的核心理念及安装机制，我们暂且分析到这里。这一讲，我们梳理了 npm 安装逻辑，在了解其安装原理的基础上，对 npm 一些常见使用误区以及使用技巧进行了分析；另外我们也具体了解了 npm 多源镜像和企业级部署私服原理。",-1),zs=(0,l.Wm)("p",null,[(0,l.Wm)("img",{src:c,alt:"img"})],-1),Ks=(0,l.Wm)("p",null,"各种环节并不复杂，但是却往往被开发者忽略，导致项目中开发受阻或者架构混乱。本课时，我们也深入多处源码内容，希望对你设计一个完整的工程流程机制有所启发。这里我也给大家留一个思考题：cnpm 是什么，它有什么意义？欢迎你在留言区分享你的观点。",-1),na={render:function(n,s){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,u,i,r,W,k,g,d,b,U,h,f,_,v,x,j,y,A,w,E,C,B,T,X,I,H,q,P,S,D,F,R,Y,(0,l.Wm)("p",null,[L,(0,l.Wm)("a",O,[G,(0,l.Wm)(a)]),J]),M,Q,Z,N,V,(0,l.Wm)("p",null,[$,(0,l.Wm)("a",z,[K,(0,l.Wm)(a)]),nn,(0,l.Wm)("a",sn,[an,(0,l.Wm)(a)]),ln,(0,l.Wm)("a",mn,[en,(0,l.Wm)(a)]),pn]),(0,l.Wm)("p",null,[tn,(0,l.Wm)("a",cn,[on,(0,l.Wm)(a)]),un]),rn,Wn,kn,(0,l.Wm)("p",null,[gn,(0,l.Wm)("a",dn,[bn,(0,l.Wm)(a)]),Un]),hn,fn,_n,vn,xn,jn,yn,(0,l.Wm)("div",An,[wn,(0,l.Wm)("p",null,[En,(0,l.Wm)("a",Cn,[Bn,(0,l.Wm)(a)]),Tn])]),Xn,In,(0,l.Wm)("div",Hn,[qn,(0,l.Wm)("p",null,[Pn,(0,l.Wm)("a",Sn,[Dn,(0,l.Wm)(a)]),Fn])]),Rn,Yn,Ln,On,Gn,Jn,Mn,Qn,Zn,Nn,Vn,$n,zn,Kn,(0,l.Wm)("p",null,[ns,ss,(0,l.Wm)("a",as,[ls,(0,l.Wm)(a)]),ms]),es,ps,ts,cs,os,us,is,rs,Ws,ks,gs,(0,l.Wm)("p",null,[ds,(0,l.Wm)("a",bs,[Us,(0,l.Wm)(a)]),hs]),fs,_s,vs,xs,js,ys,As,(0,l.Wm)("p",null,[ws,(0,l.Wm)("a",Es,[Cs,(0,l.Wm)(a)]),Bs]),Ts,Xs,Is,Hs,qs,Ps,Ss,Ds,Fs,Rs,Ys,Ls,Os,Gs,Js,(0,l.Wm)("p",null,[Ms,(0,l.Wm)("a",Qs,[Zs,(0,l.Wm)(a)]),Ns]),Vs,$s,zs,Ks],64)}}}}]);