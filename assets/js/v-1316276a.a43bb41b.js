(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[310],{7718:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-1316276a",path:"/guide/vue/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F.html",title:"Vue 组件通信",lang:"en-US",frontmatter:{title:"Vue 组件通信"},excerpt:"",headers:[{level:3,title:"vue组件通信方式",slug:"vue组件通信方式",children:[]},{level:3,title:"1. vue 组件通信方式",slug:"_1-vue-组件通信方式",children:[]},{level:3,title:"2. 手写实现 EventBus",slug:"_2-手写实现-eventbus",children:[]},{level:3,title:"3. 为什么要用 Vuex",slug:"_3-为什么要用-vuex",children:[]},{level:3,title:"4. vuex 和 localStorage 的区别",slug:"_4-vuex-和-localstorage-的区别",children:[]},{level:3,title:"5. vuex 的原理",slug:"_5-vuex-的原理",children:[]},{level:3,title:"6. 子组件可以直接改变父组件的数据吗，说明原因",slug:"_6-子组件可以直接改变父组件的数据吗-说明原因",children:[]}],filePathRelative:"guide/vue/vue组件通信方式.md",git:{updatedTime:1625219128e3,contributors:[]}}},9103:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>P});var t=a(6252),e=a(7541);const l=(0,t.Wm)("h3",{id:"vue组件通信方式"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vue组件通信方式"},"#"),(0,t.Uk)(" vue"),(0,t.Wm)("strong",null,"组件通信方式")],-1),o=(0,t.Wm)("h3",{id:"_1-vue-组件通信方式"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_1-vue-组件通信方式"},"#"),(0,t.Uk)(" 1. vue 组件通信方式")],-1),u=(0,t.Wm)("p",null,[(0,t.Uk)("Vue 组件通信主要指以下 3 类通信："),(0,t.Wm)("strong",null,"父子组件通信、隔代组件通信、兄弟组件通信")],-1),m=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"props / emit"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"父子组件通信")]),(0,t.Wm)("p",null,"子组件不可修改父组件 props 传过来的值")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"ref 与 $parent / $children"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"父子组件通信")]),(0,t.Wm)("p",null,"ref : 如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素，如果用在子组件上，引用就指向组件实例"),(0,t.Wm)("p",null,"$parent / $children : 访问 父 / 子 实例")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"EventBus ($emit / $on)"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"父子、隔代、兄弟组件通信通用")]),(0,t.Wm)("p",null,"这种方法通过一个空的 Vue 实例作为中央事件总线（事件中心），用它来触发事件和监听事件，从而实现任何组件间的通信，包括 父子、隔代、兄弟")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"$attrs / $listeners"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"隔代组件通信")]),(0,t.Wm)("p",null,'$attrs ： 包含了父作用域中不被 prop 所识别（且获取）的特性绑定（class 和 style 除外）。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定（class 和 style 除外），并且可以通过 v-bind="$attrs" 传入内部组件。通常配合 inheritAttrs 选项一起使用'),(0,t.Wm)("p",null,'$listeners : 包含了父作用域中（不含 .native修饰器）v-on 事件监听器。它可以通过 v-on="$listeners" 传入内部组件')]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"provide / inject"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"隔代组件通信")]),(0,t.Wm)("p",null,"祖先组件通过 provider 来提供变量，然后在子孙组件中通过 inject 来注入变量。"),(0,t.Wm)("p",null,"provide / inject API 主要解决了跨级组件间的通信，不过它的使用场景，主要是子组件获取上级组件的状态，跨级组件间建立了一种主动提供与依赖注入的关系")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"Vuex"),(0,t.Uk)(" -- "),(0,t.Wm)("strong",null,"父子、隔代、兄弟组件通信")]),(0,t.Wm)("p",null,'Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。“store" 基本上就是一个容器，它包含着你的应用中大部分的状态（state）。'),(0,t.Wm)("p",null,"Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。"),(0,t.Wm)("p",null,"改变 store 中的状态的唯一途径就是显式地提交（commit）mutation。这样使得我们可以方便地跟踪每一个状态的变化。")])],-1),c=(0,t.Wm)("h3",{id:"_2-手写实现-eventbus"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_2-手写实现-eventbus"},"#"),(0,t.Uk)(" 2. 手写实现 EventBus")],-1),p=(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"EventEmitter"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// {'clicl':[fn1,fn2], 'change':[fn1]}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Object"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"create"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"$on"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" handler")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"push"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("handler"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"$emit"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" data")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"forEach"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"handler"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token function"},"handler"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"$off"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("fn")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" cbs "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("cbs"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 如果不存在直接返回"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("fn"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("subs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 没有指定回调，移除该事件所有回调"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token comment"},"// 移除指定的回调"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" cb\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" cbs"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("length\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"while"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token operator"},"--"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t\tcb "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" cbs"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n  \t\tconsole"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"log"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"11"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("cb"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("cb "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(" fn "),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)(" cb"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("fn "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(" fn"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t\t\tcbs"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"splice"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  \t\t\t"),(0,t.Wm)("span",{class:"token keyword"},"break"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \t\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"$once"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("fn")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function-variable function"},"on"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Wm)("span",{class:"token operator"},"..."),(0,t.Uk)("args")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"$off"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("on"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  \t\t"),(0,t.Wm)("span",{class:"token function"},"fn"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"apply"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("args"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  \t"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \ton"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("fn "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" fn\n  \t"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"$on"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("eventType"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("on"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"4"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"5"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"6"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"7"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"8"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"9"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"10"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"11"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"12"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"13"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"14"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"15"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"16"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"17"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"18"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"19"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"20"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"21"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"22"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"23"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"24"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"25"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"26"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"27"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"28"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"29"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"30"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"31"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"32"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"33"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"34"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"35"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"36"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"37"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"38"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"39"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"40"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"41"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"42"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"43"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"44"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"45"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"46"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"47"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"48"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"49"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"50"),(0,t.Wm)("br")])],-1),W=(0,t.Wm)("h3",{id:"_3-为什么要用-vuex"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_3-为什么要用-vuex"},"#"),(0,t.Uk)(" 3. 为什么要用 Vuex")],-1),k=(0,t.Wm)("p",null,"由于传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致代码无法维护。",-1),r=(0,t.Wm)("p",null,"所以我们需要把组件的共享状态抽取出来，以一个全局单例模式管理。在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！",-1),i=(0,t.Wm)("p",null,"另外，通过定义和隔离状态管理中的各种概念并强制遵守一定的规则，我们的代码将会变得更结构化且易维护。",-1),U=(0,t.Wm)("h3",{id:"_4-vuex-和-localstorage-的区别"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_4-vuex-和-localstorage-的区别"},"#"),(0,t.Uk)(" 4. vuex 和 localStorage 的区别")],-1),b=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"最重要的区别"),(0,t.Uk)("：")],-1),d=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"vuex 存储在内存"),(0,t.Wm)("li",null,"localStorage 则以文件的方式存储在本地，localStorage 只能存储字符串类型的数据，存储对象需要 JSON 的 stringfy 和 parse 方法进行处理。读取内存比读取硬盘速度要快")],-1),v=(0,t.Wm)("p",null,"应用场景：",-1),h=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"vuex 是一个专为 vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。vuex 用于组件之间的传值。"),(0,t.Wm)("li",null,"localStorage 是本地存储，是将数据存储到浏览器的方法，一般是在跨页面传递数据时使用"),(0,t.Wm)("li",null,"vuex 能做到数据的响应式，localStorage 不能")],-1),g=(0,t.Wm)("p",null,"永久性:",-1),f=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"刷新页面时 vuex 存储的值会丢失"),(0,t.Wm)("li",null,"localStorage 不会")],-1),y=(0,t.Wm)("h3",{id:"_5-vuex-的原理"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_5-vuex-的原理"},"#"),(0,t.Uk)(" 5. vuex 的原理")],-1),w=(0,t.Wm)("p",null,"vuex 为 vue Components 建立起了一个完整的生态圈，包括开发中的 API 调用一环。",-1),x=(0,t.Wm)("p",null,[(0,t.Wm)("img",{src:e.Z,alt:"img"})],-1),_=(0,t.Wm)("h4",{id:"_5-1-核心流程的主要功能"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_5-1-核心流程的主要功能"},"#"),(0,t.Uk)(" 5.1 核心流程的主要功能：")],-1),V=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,"Vue Components 是我们的 vue 组件，组件会触发 （dispatch）一些事件或动作，也就是图中的 Actions"),(0,t.Wm)("li",null,"我们在组件中发出的动作，肯定是想获取或者改变数据的，但是在 vuex 中，数据是集中管理的，我们不能直接去更改数据，所以会把这个动作提交 （commit）到 Mutations 中"),(0,t.Wm)("li",null,"然后 Mutations 就去改变 （Mutate）State 中的数据"),(0,t.Wm)("li",null,"当 State 中的数据被改变之后，就会重新渲染（Render）到 Vue Components 中去，组件展示更新后的数据，完成一个流程。")])])],-1),$=(0,t.Wm)("h4",{id:"_5-2-各模块在核心流程中的主要功能"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_5-2-各模块在核心流程中的主要功能"},"#"),(0,t.Uk)(" 5.2 各模块在核心流程中的主要功能")],-1),T=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"Vue Components"),(0,t.Uk)(": Vue组件。Html 页面上，负责接收用户操作等交互行为，执行 dispatch 方法触发 action 进行回应")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"dispatch"),(0,t.Uk)("：操作行为触发方法，是唯一能执行action的方法")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"actions"),(0,t.Uk)("：操作行为处理模块。负责处理 Vue Components 接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台 API 请求的操作就在这个模块中进行，包括触发其他 action 以及提交 mutation 的操作。该模块提供了 Promise 的封装，以支持 action 的链式触发")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"commit"),(0,t.Uk)("：状态改变提交操作方法。对 mutation 进行提交，是唯一能执行 mutation 的方法")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"mutations"),(0,t.Uk)(" :状态改变操作方法。是 Vuex 修改 state 的唯一推荐方法，其他修改方式在严格模式下将会报错。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些 hook 暴露出来，以进行 state 的监控等。")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"state"),(0,t.Uk)("：页面状态管理容器对象。集中存储 Vue Components 中的 data 对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用 Vue 的细粒度数据响应机制来进行高效的状态更新。")]),(0,t.Wm)("li",null,[(0,t.Wm)("strong",null,"getters"),(0,t.Uk)("：state 对象读取方法。图中没有单独列出该模块，应该被包含在了 render 中，Vue Components 通过该方法读取全局state 对象")])],-1),E=(0,t.Wm)("h3",{id:"_6-子组件可以直接改变父组件的数据吗-说明原因"},[(0,t.Wm)("a",{class:"header-anchor",href:"#_6-子组件可以直接改变父组件的数据吗-说明原因"},"#"),(0,t.Uk)(" 6. 子组件可以直接改变父组件的数据吗，说明原因")],-1),B=(0,t.Wm)("p",null,"不可以。",-1),S=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"主要是为了维护父子组件的单向数据流")],-1),j=(0,t.Wm)("p",null,"每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值。",-1),C=(0,t.Wm)("p",null,"如果这样做了，Vue 会在浏览器的控制台中发出警告。",-1),A=(0,t.Wm)("p",null,"Vue 提倡单向数据流，即父级 props 的更新会流向子组件，但是反过来则不行。这是为了防止意外的改变父组件状态，使得应用的数据流变得难以理解，导致数据流混乱。如果破坏了单向数据流，当应用复杂时， debug 的成本会非常高。",-1),M=(0,t.Wm)("p",null,"只能通过 $emit 派发一个自定义事件，父组件接收到后，由父组件修改。",-1),P={render:function(n,s){return(0,t.wg)(),(0,t.j4)(t.HY,null,[l,o,u,m,c,p,W,k,r,i,U,b,d,v,h,g,f,y,w,x,_,V,$,T,E,B,S,j,C,A,M],64)}}},7541:(n,s,a)=>{"use strict";a.d(s,{Z:()=>t});const t=a.p+"assets/img/vuex.c2bcd672.png"}}]);