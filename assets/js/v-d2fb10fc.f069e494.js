(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[856],{7531:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-d2fb10fc",path:"/guide/vue/VueRouter(%E4%BA%8C).html",title:"VueRouter-原理",lang:"en-US",frontmatter:{title:"VueRouter-原理"},excerpt:"",headers:[{level:2,title:"路由选项 - mode",slug:"路由选项-mode",children:[]},{level:2,title:"实现原理",slug:"实现原理",children:[{level:3,title:"Hash 模式 与 History 模式的区别",slug:"hash-模式-与-history-模式的区别",children:[]}]},{level:2,title:"addRoute",slug:"addroute",children:[]},{level:2,title:"路由对象",slug:"路由对象",children:[{level:3,title:"路由对象属性",slug:"路由对象属性",children:[]}]},{level:2,title:"组件注入",slug:"组件注入",children:[]},{level:2,title:"vue-router 实现原理",slug:"vue-router-实现原理",children:[{level:3,title:"History 模式",slug:"history-模式",children:[]},{level:3,title:"Hash 模式",slug:"hash-模式",children:[]}]}],filePathRelative:"guide/vue/VueRouter(二).md",git:{updatedTime:1624843661e3,contributors:[]}}},6546:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>mn});var t=a(6252);const e=a.p+"assets/img/vue-router类图.7695b693.jpg",o=(0,t.Wm)("h1",{id:"vuerouter"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vuerouter"},"#"),(0,t.Uk)(" VueRouter")],-1),l=(0,t.Wm)("h2",{id:"路由选项-mode"},[(0,t.Wm)("a",{class:"header-anchor",href:"#路由选项-mode"},"#"),(0,t.Uk)(" 路由选项 - mode")],-1),m=(0,t.Wm)("p",null,"配置路由模式:",-1),p=(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"hash"),(0,t.Uk)(": 使用 URL hash 值来作路由。支持所有浏览器，包括不支持 HTML5 History Api 的浏览器。")])],-1),c=(0,t.Wm)("code",null,"history",-1),u=(0,t.Uk)(": 依赖 HTML5 History API 和服务器配置。查看 "),W={href:"https://router.vuejs.org/zh/guide/essentials/history-mode.html",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("HTML5 History 模式"),k=(0,t.Uk)("。"),i=(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"abstract"),(0,t.Uk)(": 支持所有 JavaScript 运行环境，如 Node.js 服务器端。"),(0,t.Wm)("strong",null,"如果发现没有浏览器的 API，路由会自动强制进入这个模式。")])],-1),b=(0,t.Wm)("h2",{id:"实现原理"},[(0,t.Wm)("a",{class:"header-anchor",href:"#实现原理"},"#"),(0,t.Uk)(" 实现原理")],-1),U=(0,t.Wm)("p",null,"​ vue-router 的原理就是更新视图而不重新请求页面",-1),d=(0,t.Wm)("p",null,"​ vue-router 可以通过 mode 参数设置为三种模式：hash 模式、history 模式、abstract 模式",-1),h=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"hash 模式")]),(0,t.Wm)("p",null,[(0,t.Uk)("默认是 hash 模式，基于浏览器的 history api，使用 "),(0,t.Wm)("code",null,'window.addEventListener("hashchange",callback,false)'),(0,t.Uk)("对浏览器地址进行监听。当调用 push 时，把新路由添加到浏览器访问历史的栈顶。使用 replace 时，把浏览器访问历史的栈顶路由替换成新路由。")]),(0,t.Wm)("p",null,"hash 值等于 url 中 # 及其以后的内容。浏览器是根据 hash 值的变化，将页面加载到相应的 DOM 位置。锚点变化只是浏览器的行为，每次锚点变化后依然会在浏览器中留下一条历史记录，可以通过浏览器的后退按钮回到上一个位置")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"history 模式")]),(0,t.Wm)("p",null,[(0,t.Uk)("history 模式，基于浏览器 history api，使用 "),(0,t.Wm)("code",null,"window.onpopstate"),(0,t.Uk)("对浏览器地址进行监听。对浏览器 history api 中 pushState() , replaceState() 进行封装，当方法调用，会对浏览器历史栈进行修改。从而实现 URL 的跳转而无需重新加载页面。")]),(0,t.Wm)("p",null,"但是它的问题在于当刷新页面的时候会走后端路由，所以需要服务端的辅助来兜底，避免 URL 无法匹配到资源时能返回页面。")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"abstract 模式")]),(0,t.Wm)("p",null,"不涉及和浏览器地址的相关记录。流程和 hash 模式一样，通过数组维护模拟浏览器的历史记录栈。"),(0,t.Wm)("p",null,"服务端下使用。使用一个不依赖于浏览器的浏览历史虚拟管理后台。")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"总结")]),(0,t.Wm)("p",null,[(0,t.Uk)("hash 模式和 history 模式都是通过 "),(0,t.Wm)("code",null,"window.addEventListener() "),(0,t.Uk)("方法监听 hashchange 和 popState 进行相应路由的操作。可以通过 back 、foward、go 等方法访问浏览器的历史记录栈，进行各种跳转。而 abstract 模式是自己维护一个模拟的浏览器历史记录栈的数组。")])])],-1),g=(0,t.Wm)("h3",{id:"hash-模式-与-history-模式的区别"},[(0,t.Wm)("a",{class:"header-anchor",href:"#hash-模式-与-history-模式的区别"},"#"),(0,t.Uk)(" Hash 模式 与 History 模式的区别")],-1),f=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"表现形式的区别"),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,"hash 模式多了一个 #")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"原理的区别"),(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"Hash 模式是基于锚点，以及 onhashchange 事件"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"URL 中 # 后面的内容作为路径地址"),(0,t.Wm)("li",null,"监听 hashchange 事件"),(0,t.Wm)("li",null,"根据当前路由地址找到对应组件重新渲染")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"History 模式是基于 HTML5 中的 History API"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"通过 history.pushState() 方法改变地址栏"),(0,t.Wm)("li",null,"监听 popState 事件"),(0,t.Wm)("li",null,"根据当前路由地址找到对应组件重新渲染")]),(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Uk)("history"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"pushState"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("   "),(0,t.Wm)("span",{class:"token comment"},"// ie10以后才支持，所以兼容ie 9 需要使用 hash"),(0,t.Uk)("\nhistory"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"replaceState"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br")])])])])])],-1),y=(0,t.Wm)("h2",{id:"addroute"},[(0,t.Wm)("a",{class:"header-anchor",href:"#addroute"},"#"),(0,t.Uk)(" addRoute")],-1),w=(0,t.Wm)("p",null,[(0,t.Uk)("添加一条新路由规则。如果该路由规则有 "),(0,t.Wm)("code",null,"name"),(0,t.Uk)("，并且已经存在一个与之相同的名字，则会覆盖它。")],-1),v=(0,t.Wm)("p",null,"函数签名:",-1),V=(0,t.Wm)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token function"},"addRoute"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("route"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" RouteConfig"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br")])],-1),R=(0,t.Wm)("p",null,[(0,t.Uk)("添加一条新的路由规则记录作为现有路由的子路由。如果该路由规则有 "),(0,t.Wm)("code",null,"name"),(0,t.Uk)("，并且已经存在一个与之相同的名字，则会覆盖它。")],-1),j=(0,t.Wm)("p",null,"函数签名:",-1),$=(0,t.Wm)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-typescript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token function"},"addRoute"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("parentName"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token builtin"},"string"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" route"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" RouteConfig"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"void"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br")])],-1),M=(0,t.Wm)("h2",{id:"路由对象"},[(0,t.Wm)("a",{class:"header-anchor",href:"#路由对象"},"#"),(0,t.Uk)(" 路由对象")],-1),H=(0,t.Wm)("p",null,[(0,t.Uk)("一个"),(0,t.Wm)("strong",null,"路由对象 (route object)"),(0,t.Uk)(" 表示当前激活的路由的状态信息，包含了当前 URL 解析得到的信息，还有 URL 匹配到的"),(0,t.Wm)("strong",null,"路由记录 (route records)"),(0,t.Uk)("。")],-1),E=(0,t.Wm)("p",null,"路由对象是不可变 (immutable) 的，每次成功的导航后都会产生一个新的对象。",-1),_=(0,t.Wm)("p",null,"路由对象出现在多个地方:",-1),L=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Uk)("在组件内，即 "),(0,t.Wm)("code",null,"this.$route")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Uk)("在 "),(0,t.Wm)("code",null,"$route"),(0,t.Uk)(" 观察者回调内")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"router.match(location)"),(0,t.Uk)(" 的返回值")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"导航守卫的参数："),(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Uk)("router"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"beforeEach"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("to"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"from"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" next")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// `to` 和 `from` 都是路由对象"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br")])])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"scrollBehavior"),(0,t.Uk)(" 方法的参数:")]),(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" router "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"VueRouter"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"scrollBehavior"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},[(0,t.Uk)("to"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"from"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(" savedPosition")]),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// `to` 和 `from` 都是路由对象"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"4"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"5"),(0,t.Wm)("br")])])])],-1),x=(0,t.Wm)("h3",{id:"路由对象属性"},[(0,t.Wm)("a",{class:"header-anchor",href:"#路由对象属性"},"#"),(0,t.Uk)(" 路由对象属性")],-1),S=(0,t.uE)('<li><p><strong>$route.path</strong></p><ul><li><p>类型: <code>string</code></p><p>字符串，对应当前路由的路径，总是解析为绝对路径，如 <code>&quot;/foo/bar&quot;</code>。</p></li></ul></li><li><p><strong>$route.params</strong></p><ul><li><p>类型: <code>Object</code></p><p>一个 key/value 对象，包含了动态片段和全匹配片段，如果没有路由参数，就是一个空对象。</p></li></ul></li><li><p><strong>$route.query</strong></p><ul><li><p>类型: <code>Object</code></p><p>一个 key/value 对象，表示 URL 查询参数。例如，对于路径 <code>/foo?user=1</code>，则有 <code>$route.query.user == 1</code>，如果没有查询参数，则是个空对象。</p></li></ul></li><li><p><strong>$route.hash</strong></p><ul><li><p>类型: <code>string</code></p><p>当前路由的 hash 值 (带 <code>#</code>) ，如果没有 hash 值，则为空字符串。</p></li></ul></li><li><p><strong>$route.fullPath</strong></p><ul><li><p>类型: <code>string</code></p><p>完成解析后的 URL，包含查询参数和 hash 的完整路径。</p></li></ul></li><li><p><strong>$route.matched</strong></p><ul><li>类型: <code>Array&lt;RouteRecord&gt;</code></li></ul><p>一个数组，包含当前路由的所有嵌套路径片段的<strong>路由记录</strong> 。路由记录就是 <code>routes</code> 配置数组中的对象副本 (还有在 <code>children</code> 数组)。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  routes<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 下面的对象就是路由记录</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> Foo<span class="token punctuation">,</span>\n      children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// 这也是个路由记录</span>\n        <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Bar <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>当 URL 为 <code>/foo/bar</code>，<code>$route.matched</code> 将会是一个包含从上到下的所有对象 (副本)。</p></li>',6),C=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"$route.name")],-1),A=(0,t.Uk)("当前路由的名称，如果有的话。(查看"),B={href:"https://router.vuejs.org/zh/guide/essentials/named-routes.html",target:"_blank",rel:"noopener noreferrer"},P=(0,t.Uk)("命名路由"),T=(0,t.Uk)(")"),q=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"$route.redirectedFrom")],-1),z=(0,t.Uk)("如果存在重定向，即为重定向来源的路由的名字。(参阅"),F={href:"https://router.vuejs.org/zh/guide/essentials/redirect-and-alias.html",target:"_blank",rel:"noopener noreferrer"},O=(0,t.Uk)("重定向和别名"),I=(0,t.Uk)(")"),D=(0,t.Wm)("h2",{id:"组件注入"},[(0,t.Wm)("a",{class:"header-anchor",href:"#组件注入"},"#"),(0,t.Uk)(" 组件注入")],-1),K=(0,t.Wm)("p",null,[(0,t.Uk)("通过在 Vue 根实例的 "),(0,t.Wm)("code",null,"router"),(0,t.Uk)(" 配置传入 router 实例，下面这些属性成员会被注入到每个子组件。")],-1),N=(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"this.$router")]),(0,t.Wm)("p",null,"router 实例。")],-1),J=(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,"this.$route")],-1),Y=(0,t.Uk)("当前激活的"),G={href:"https://router.vuejs.org/zh/api/#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},Q=(0,t.Uk)("路由信息对象"),X=(0,t.Uk)("。这个属性是只读的，里面的属性是 immutable (不可变) 的，不过你可以 watch (监测变化) 它。"),Z=(0,t.Wm)("h2",{id:"vue-router-实现原理"},[(0,t.Wm)("a",{class:"header-anchor",href:"#vue-router-实现原理"},"#"),(0,t.Uk)(" vue-router 实现原理")],-1),nn=(0,t.Wm)("p",null,[(0,t.Wm)("img",{src:e,alt:"vue-router类图"})],-1),sn=(0,t.Wm)("ol",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"install"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"判断当前插件是否已经被安装"),(0,t.Wm)("li",null,"把Vue构造函数记录到全局变量"),(0,t.Wm)("li",null,"把创建 Vue 实例时候传入的 router 对象注入到 Vue 实例上（Vue.mixin）"),(0,t.Wm)("li",null,"调用 init 方法")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"constructor"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"初始化 3 个需要的属性：options 、 routeMap 、 data")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"Vue.observable 创建响应式对象")])])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"createRouteMap"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"遍历所有的路由规则，把路由规则解析成键值对的形式，存储到 routeMap")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"initComponents"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"初始化 router-link 和 router-view 组件"),(0,t.Wm)("li",null,"router-link 组件 调用 pushState 事件（不会触发浏览器popState事件 ），改变浏览器地址，阻止超链接默认功能使浏览器不向后台发送请求，记录当前地址到 data.current"),(0,t.Wm)("li",null,"router-view 组件，根据 data.current 的值渲染对应的组件")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"init"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"调用 createRouteMap 方法"),(0,t.Wm)("li",null,"调用 initComponents 方法"),(0,t.Wm)("li",null,"调用 initEvent 方法")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"initEvent"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"监听 popState 事件，监听浏览器前进后退，将浏览器地址记录到data.current ，然后渲染组件")])])],-1),an=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"问题：注册组件 使用 template 报错，vue cli 默认使用运行时版本"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"Vue 运行时版：不支持 template 模板，需要打包的时候提前编译"),(0,t.Wm)("li",null,"完整版：包含运行时和编译器，体积比运行时版大 10K 左右，程序运行的时候把模板转换成 render 函数")])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"解决："),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"第一种：开启包含运行时编译器的 Vue 构建版本"),(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token comment"},"// vue.config.js"),(0,t.Uk)("\nmodule"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("exports "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n\truntimeCompiler"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 开启后编译器会把 template 编译成 render"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"4"),(0,t.Wm)("br")])])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"第二种：使用 render 函数")])])])],-1),tn=(0,t.Wm)("h3",{id:"history-模式"},[(0,t.Wm)("a",{class:"header-anchor",href:"#history-模式"},"#"),(0,t.Uk)(" History 模式")],-1),en=(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" _Vue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"VueRouter"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"static"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"install"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 1. 判断当前插件是否已经被安装"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("VueRouter"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("install"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("installed "),(0,t.Wm)("span",{class:"token operator"},"&&"),(0,t.Uk)(" _Vue "),(0,t.Wm)("span",{class:"token operator"},"==="),(0,t.Uk)(" Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    VueRouter"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("install"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("installed "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 2. 把 Vue 构造函数记录到全局变量"),(0,t.Uk)("\n    _Vue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Vue\n    "),(0,t.Wm)("span",{class:"token comment"},"// 3. 把创建 Vue 实例时候传入的 router 对象注入到 vue 实例上"),(0,t.Uk)("\n    \n    "),(0,t.Wm)("span",{class:"token comment"},"// 混入"),(0,t.Uk)("\n    _Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"mixin"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"beforeCreate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("router"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("  "),(0,t.Wm)("span",{class:"token comment"},"// 只在 app里的vue实例时注册，其他组件不用"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token class-name"},"_Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("prototype"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$router "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("router\n          "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("router"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"init"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"options"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" options\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" _Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"observable"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// observable 创建响应式对象"),(0,t.Uk)("\n      current"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token string"},"'/'"),(0,t.Uk)("      "),(0,t.Wm)("span",{class:"token comment"},"// 存储当前的路由地址"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"init"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createRouteMap"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"initComponents"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("_Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"initEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"createRouteMap"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 遍历所有的路由规则，把路由规则解析成键值对的形式，存储到 routeMap 中"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routes"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"forEach"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"route"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("route"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("path"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" route"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("component\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token comment"},"/*\n  initComponents(Vue){\n    Vue.component('router-link',{\n      props:{\n        to:String\n      },\n      template:'<a :href=\"to\"><slot></slot></a>'\n      // Vue 运行时版：不支持 template 模板，需要打包的时候提前编译\n      // 完整版：包含运行时和编译器，体积比运行时版大 10K 左右，程序运行的时候把模板转换成 render 函数\n    })\n  }\n  */"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"initComponents"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"component"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'router-link'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      props"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        to"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)("String\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"render"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"h"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"h"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'a'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          attrs"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            href"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("to\n          "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n          on"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            click"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("clickHandler \n              \n          "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$slots"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("default\n        "),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n      methods"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token function"},"clickHandler"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"e"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n         "),(0,t.Wm)("span",{class:"token comment"},"// 1. 取消超链接默认事件，使他不向服务器发送请求，"),(0,t.Uk)("\n         "),(0,t.Wm)("span",{class:"token comment"},"// 2. 同时调用  history.pushState 事件 改变地址栏"),(0,t.Uk)("\n         "),(0,t.Wm)("span",{class:"token comment"},"// 3. 把当前路径记录到 data.current 里"),(0,t.Uk)("\n          history"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"pushState"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token string"},"''"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("to"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$router"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("current "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("to\n          e"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"preventDefault"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    \n    "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" self "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Uk)("\n    Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"component"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'router-view'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token comment"},"//  找到当前路由的地址 current ，根据地址在 routeMap 中找到地址对应的组件"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"render"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"h"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" component "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" self"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("self"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("current"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"h"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("component"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// h把component是 转换成虚拟 dom"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n  "),(0,t.Wm)("span",{class:"token function"},"initEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"addEventListener"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'popstate'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("current "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("location"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("pathname\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"default"),(0,t.Uk)(" VueRouter\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"4"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"5"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"6"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"7"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"8"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"9"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"10"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"11"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"12"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"13"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"14"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"15"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"16"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"17"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"18"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"19"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"20"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"21"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"22"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"23"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"24"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"25"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"26"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"27"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"28"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"29"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"30"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"31"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"32"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"33"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"34"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"35"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"36"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"37"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"38"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"39"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"40"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"41"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"42"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"43"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"44"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"45"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"46"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"47"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"48"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"49"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"50"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"51"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"52"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"53"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"54"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"55"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"56"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"57"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"58"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"59"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"60"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"61"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"62"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"63"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"64"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"65"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"66"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"67"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"68"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"69"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"70"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"71"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"72"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"73"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"74"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"75"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"76"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"77"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"78"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"79"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"80"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"81"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"82"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"83"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"84"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"85"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"86"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"87"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"88"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"89"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"90"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"91"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"92"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"93"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"94"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"95"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"96"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"97"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"98"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"99"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"100"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"101"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"102"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"103"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"104"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"105"),(0,t.Wm)("br")])],-1),on=(0,t.Wm)("h3",{id:"hash-模式"},[(0,t.Wm)("a",{class:"header-anchor",href:"#hash-模式"},"#"),(0,t.Uk)(" Hash 模式")],-1),ln=(0,t.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t.Wm)("pre",{class:"language-javascript"},[(0,t.Wm)("code",null,[(0,t.Wm)("span",{class:"token keyword"},"import"),(0,t.Uk)(" Vue "),(0,t.Wm)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'vue'"),(0,t.Uk)("\nconsole"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"dir"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"let"),(0,t.Uk)(" _Vue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"null"),(0,t.Uk)("\n"),(0,t.Wm)("span",{class:"token keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"default"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token class-name"},"VueRouter"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token comment"},"// 实现 vue 的插件机制"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token keyword"},"static"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"install"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"//1 判断当前插件是否被安装"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("VueRouter"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("install"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("installed"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    VueRouter"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("install"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("installed "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"//2 把Vue的构造函数记录在全局"),(0,t.Uk)("\n    _Vue "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" Vue\n    "),(0,t.Wm)("span",{class:"token comment"},"//3 把创建Vue的实例传入的router对象注入到Vue实例"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// _Vue.prototype.$router = this.$options.router"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// 混入"),(0,t.Uk)("\n    _Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"mixin"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"beforeCreate"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("router"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token class-name"},"_Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("prototype"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$router "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("router\n\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"// 初始化属性"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"constructor"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"options"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" options "),(0,t.Wm)("span",{class:"token comment"},"// options 记录构造函数传入的对象"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// routeMap 路由地址和组件的对应关系"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// observable     data 是一个响应式对象"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" _Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"observable"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      current"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},'"/"'),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// 当前路由地址"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"init"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"// 调用 createRouteMap, initComponent, initEvent 三个方法"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"init"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"createRouteMap"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"initComponent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("_Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"initEvent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"// 用来初始化 routeMap 属性，路由规则转换为键值对"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"createRouteMap"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"//遍历所有的路由规则 把路由规则解析成键值对的形式存储到routeMap中"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("options"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routes"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"forEach"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"route"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("route"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("path"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" route"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("component\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"// 用来创建 router-link 和 router-view 组件"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"initComponent"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"Vue"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// router-link 组件"),(0,t.Uk)("\n    Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"component"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'router-link'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      props"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        to"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(" String\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token comment"},"// render --- 可在 vue 运行时版直接使用"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"render"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"h"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// h(选择器（标签的名字）， 属性，生成的某个标签的内容)"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"h"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'a'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n          attrs"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            href"),(0,t.Wm)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'#'"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("to"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token comment"},"// hash改变 本身就不会向后台发送请求，所以不需要注册点击事件"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token comment"},"// 注册事件"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token comment"},"//   on: {"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token comment"},"//     click: this.clickHandler // 点击事件"),(0,t.Uk)("\n          "),(0,t.Wm)("span",{class:"token comment"},"//   },"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("$slots"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("default"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"// this.$slot.default 默认插槽"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// router-view 组件"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" self "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token comment"},"//这里的 this 指向 vueRouter 实例"),(0,t.Uk)("\n    Vue"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"component"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'router-view'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token function"},"render"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token parameter"},"h"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token comment"},"// 根据 routerMap 中的对应关系，拿到当前路由地址所对应的组件"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"const"),(0,t.Uk)(" component "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(" self"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("routeMap"),(0,t.Wm)("span",{class:"token punctuation"},"["),(0,t.Uk)("self"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("current"),(0,t.Wm)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token function"},"h"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Uk)("component"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    \n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token comment"},"// 用来注册 hashchange 事件"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token function"},"initEvent"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n     window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"addEventListener"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'hashchange'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("data"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("current "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token keyword"},"this"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"getHash"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"addEventListener"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token string"},"'load'"),(0,t.Wm)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token operator"},"!"),(0,t.Uk)("window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("location"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("hash"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("location"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("hash "),(0,t.Wm)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'#/'"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t.Wm)("span",{class:"token function"},"getHash"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token comment"},"// window.location.hash 获取的就是 #以及后面的url"),(0,t.Uk)("\n    "),(0,t.Wm)("span",{class:"token keyword"},"return"),(0,t.Uk)(" window"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("location"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Uk)("hash"),(0,t.Wm)("span",{class:"token punctuation"},"."),(0,t.Wm)("span",{class:"token function"},"slice"),(0,t.Wm)("span",{class:"token punctuation"},"("),(0,t.Wm)("span",{class:"token number"},"1"),(0,t.Wm)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token operator"},"||"),(0,t.Uk)(),(0,t.Wm)("span",{class:"token string"},"'/'"),(0,t.Wm)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  \n"),(0,t.Wm)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t.Wm)("div",{class:"line-numbers"},[(0,t.Wm)("span",{class:"line-number"},"1"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"2"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"3"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"4"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"5"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"6"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"7"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"8"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"9"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"10"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"11"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"12"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"13"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"14"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"15"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"16"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"17"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"18"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"19"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"20"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"21"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"22"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"23"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"24"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"25"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"26"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"27"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"28"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"29"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"30"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"31"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"32"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"33"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"34"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"35"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"36"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"37"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"38"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"39"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"40"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"41"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"42"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"43"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"44"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"45"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"46"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"47"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"48"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"49"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"50"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"51"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"52"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"53"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"54"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"55"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"56"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"57"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"58"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"59"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"60"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"61"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"62"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"63"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"64"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"65"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"66"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"67"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"68"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"69"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"70"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"71"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"72"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"73"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"74"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"75"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"76"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"77"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"78"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"79"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"80"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"81"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"82"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"83"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"84"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"85"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"86"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"87"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"88"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"89"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"90"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"91"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"92"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"93"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"94"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"95"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"96"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"97"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"98"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"99"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"100"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"101"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"102"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"103"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"104"),(0,t.Wm)("br"),(0,t.Wm)("span",{class:"line-number"},"105"),(0,t.Wm)("br")])],-1),mn={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[o,l,m,(0,t.Wm)("ul",null,[p,(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[c,u,(0,t.Wm)("a",W,[r,(0,t.Wm)(a)]),k])]),i]),b,U,d,h,g,f,y,w,v,V,R,j,$,M,H,E,_,L,x,(0,t.Wm)("ul",null,[S,(0,t.Wm)("li",null,[C,(0,t.Wm)("p",null,[A,(0,t.Wm)("a",B,[P,(0,t.Wm)(a)]),T])]),(0,t.Wm)("li",null,[q,(0,t.Wm)("p",null,[z,(0,t.Wm)("a",F,[O,(0,t.Wm)(a)]),I])])]),D,K,(0,t.Wm)("ul",null,[N,(0,t.Wm)("li",null,[J,(0,t.Wm)("p",null,[Y,(0,t.Wm)("a",G,[Q,(0,t.Wm)(a)]),X])])]),Z,nn,sn,an,tn,en,on,ln],64)}}}}]);